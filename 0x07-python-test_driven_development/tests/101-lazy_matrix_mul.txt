# 101-lazy_matrix_mul

Usage:
--------------------------------

Import the function:

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Test valid matrices:

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

    >>> lazy_matrix_mul([[1.2, 2.3], [10, 3]], [[2.5, 8.9], [5.5, 9.0]])
    array([[ 15.65,  31.38],
           [ 41.5 , 116.  ]])

Test for matrices that are not lists:

    >>> lazy_matrix_mul(4, 2)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list

    >>> lazy_matrix_mul([], 6)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

    >>> lazy_matrix_mul([[1, 23], [11]], 20)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

Test for matrices that are not list of lists:

    >>> lazy_matrix_mul([[1, 2]], [1, 2])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists

    >>> lazy_matrix_mul([[]], [1, 2, "kim"])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists

Test for matrices that are empty:

    >>> lazy_matrix_mul([], [])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

    >>> lazy_matrix_mul([[]], [[1, 2, "tree"]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

    >>> lazy_matrix_mul([[1, 2, "two"]], [[]])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

    >>> lazy_matrix_mul([[1, 2], [3]], [])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

Test for matrices that consist of integers/floats only:

    >>> lazy_matrix_mul([[1, 6]], [["two", 2]])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats

    >>> lazy_matrix_mul([[1, 2], ["tree"]], [["two", 2]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

Test that matrices are rectangles:

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size

    >>> lazy_matrix_mul([[1, 2], [4, 5, 6]], [[1, 2]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size

Test for matrices that can't be multiplied:

    >>> lazy_matrix_mul([[22, 4], [5, 6]], [[12, 2, 3]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied

    >>> lazy_matrix_mul([[4, 2, 6]], [[2, 5], [4, 7]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied