# 2-matrix_divided

Usage
--------------------

Import ``matrix_divided``:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test with valid matrix and divisor values:
    >>> matrix_1 = [[5, 2, 1], [2, 7, 6]]

    >>> print(matrix_divided(matrix_1, 1))
    [[5.0, 2.0, 1.0], [2.0, 7.0, 6.0]]

    >>> print(matrix_divided(matrix_1, 3))
    [[1.67, 0.67, 0.33], [0.67, 2.33, 2.0]]

    >>> print(matrix_divided(matrix_1, -2))
    [[-2.5, -1.0, -0.5], [-1.0, -3.5, -3.0]]


Test with an invalid matrix:

    >>> # A matrix with value not integer/float

    >>> matrix_2 = [[5, 'four', 2], [9, 6, 3]]

    >>> matrix_divided(matrix_2, 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> # A matrix with rows of different lengths

    >>> matrix_3 = [[1, 2, 6, 4, 5], [5, 6, 7]]

    >>> matrix_divided(matrix_3, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
    
Test with an invalid div:

    >>> # divisor == 0

    >>> matrix_divided(matrix_1, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> # divisor is not integer/float

    >>> matrix_divided(matrix_1, "five")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
